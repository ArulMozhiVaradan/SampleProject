version: '3.4'

services:

  sampleprojectdb:
    container_name: sampleprojectdb
    environment:
      - SA_PASSWORD=Admin1234!!
      - ACCEPT_EULA=Y
    restart: always
    ports:
      - 3600:1433
    networks:
      - sampleproject_network

  sampleproject.api:
    container_name: sampleproject.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8001
      - ConnectionStrings:SampleProjectConnection=Server=sampleprojectdb;Database=SampleProjectDB;User Id=sa;Password=Admin1234!!;TrustServerCertificate=True;
      - ConnectionStrings:HangfireConnection=Server=sampleprojectdb;Database=SampleProjectDB;User Id=sa;Password=Admin1234!!;TrustServerCertificate=True;
      # Connect sampleprojectdb in SSMS using IpConfig -> Ethernet adapter vEthernet (WSL) -> Ip V4
      - ConnectionStrings:RedisConnection=redis:6379,defaultdatabase=11
    ports:
      - "8001:8001"
    depends_on:
      - sampleprojectdb
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    networks:
      - sampleproject_network

  prometheus:
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/Monitoring/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - sampleproject.api
    networks:
      - sampleproject_network

  grafana:
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3700:3000"
    depends_on:
      - prometheus
    networks:
      - sampleproject_network

  redis:
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - sampleproject_network

  redisinsight:
    container_name: redisinsight
    ports:
      - "8010:8001"
    environment:
      - REDIS_URL=redis://redis:6379
    networks:
      - sampleproject_network

networks:
  sampleproject_network:
    driver: bridge